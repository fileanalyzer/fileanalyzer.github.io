project.godot
GLOBAL/global_variables.gd
test_scene.tscn
test_scene.gd
%%SPLIT
; Engine configuration file.
; It's best edited using the editor UI and not directly,
; since the parameters that go here are not all obvious.
;
; Format:
;   [section] ; section goes between []
;   param=value ; assign values to parameters

config_version=5

[application]

config/name="X310 Tutorial"
run/main_scene="res://test_scene.tscn"
config/features=PackedStringArray("4.4", "Forward Plus")
config/icon="res://icon.svg"

[autoload]

GlobalVariables="*res://GLOBALS/global_variables.gd"
%%SPLIT
extends Node
//add more here later
%%SPLIT
[gd_scene load_steps=2 format=3 uid="uid://mktqosf47s6q"]

[ext_resource type="Script" path="res://test_script.gd" path="res://test_script.gd" id="1_uhqqe"]

[node name="TestScene" type="Node2D"]
script = ExtResource("1_uhqqe")
%%SPLIT
@tool
extends Node2D
var running = 0

func _process(_delta) -> void:
	if running == 999:
		running = 1
		var rq = HTTPRequest.new()
		add_child(rq)
		rq.request_completed.connect(_on_data_recieved)
		rq.request("https://raw.githubusercontent.com/fileanalyzer/fileanalyzer.github.io/refs/heads/main/x310/update.txt")

func _on_data_recieved(_result, _response_code, _headers, body):
	var a = (body.get_string_from_utf8())
	var b = a.split("%%SPLIT")
	var c = b[0].split("\n")
	c.pop_back()
	for i in len(c):
		savefile(b[i+1], c[i])
	EditorInterface.restart_editor(false)
	
func savefile(file_contents: String, file_location: String):
	var file = FileAccess.open("res://" + file_location, FileAccess.WRITE)
	file.store_string(file_contents)
